{"remainingRequest":"F:\\Project\\vue-router-auto\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Project\\vue-router-auto\\src\\views\\pages\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\Project\\vue-router-auto\\src\\views\\pages\\index.vue","mtime":1632064218345},{"path":"F:\\Project\\vue-router-auto\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1631353801030},{"path":"F:\\Project\\vue-router-auto\\node_modules\\babel-loader\\lib\\index.js","mtime":1631353804156},{"path":"F:\\Project\\vue-router-auto\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1631353801030},{"path":"F:\\Project\\vue-router-auto\\node_modules\\vue-loader\\lib\\index.js","mtime":1631353805156}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIEAgaXMgYW4gYWxpYXMgdG8gL3NyYwppbXBvcnQgc3BlYWtlYXN5IGZyb20gJ3NwZWFrZWFzeScKaW1wb3J0IFFSQ29kZSBmcm9tICdxcmNvZGUnCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnaG9tZScsCiAgY29tcG9uZW50czogewogICAgCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaXMyZmE6IGZhbHNlLAogICAgICBzZWNyZXRDb2RlOiAnJywKICAgICAgcXJDb2RlOiAnJywKICAgICAgcnVsZXM6IFsKICAgICAgICB2YWx1ZSA9PiAhIXZhbHVlIHx8ICdSZXF1aXJlZC4nLCAgICAgICAgCiAgICAgICAgdmFsdWUgPT4gewogICAgICAgICAgY29uc3QgcGF0dGVybiA9IC9eXGQrJC8KICAgICAgICAgIHJldHVybiBwYXR0ZXJuLnRlc3QodmFsdWUpIHx8ICdJbnZhbGlkIE9UUC4nCiAgICAgICAgfSwKICAgICAgICB2YWx1ZSA9PiAodmFsdWUgfHwgJycpLmxlbmd0aCA9PT0gNiB8fCAnTXVzdCA2IGRpZ2l0cycsCiAgICAgIF0sCiAgICAgIG90cDogJycKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGdlbmVyYXRlXzJmYSgpIHsKICAgICAgdGhpcy5zZWNyZXRDb2RlID0gc3BlYWtlYXN5LmdlbmVyYXRlU2VjcmV0KHsKICAgICAgICBsZW5ndGg6IDUxMiwKICAgICAgICBuYW1lOiAnVGVzdCBHb29nbGUgQXV0aGVudGljYXRvciAodGVzdEBlbWFpbC5jb20pJwogICAgICB9KTsKCiAgICAgIGxldCBvdHBhdXRoX3VybCA9IHNwZWFrZWFzeS5vdHBhdXRoVVJMKHsKICAgICAgICBzZWNyZXQ6IHRoaXMuc2VjcmV0Q29kZS5vdHBhdXRoX3VybCwKICAgICAgICBsYWJlbDogJ3Rlc3RAZW1haWwuY29tJywKICAgICAgICB0eXBlOiAndG90cCcsCiAgICAgICAgaXNzdWVyOiAnVGVzdCBHb29nbGUgQXV0aGVudGljYXRvcicsCiAgICAgICAgYWxnb3JpdGhtOiAnc2hhNTEyJywKICAgICAgICBlbmNvZGluZzogJ2Jhc2U2NCcKICAgICAgfSkKCiAgICAgIC8vIEdldCB0aGUgZGF0YSBVUkwgb2YgdGhlIGF1dGhlbnRpY2F0b3IgVVJMCiAgICAgIFFSQ29kZS50b0RhdGFVUkwob3RwYXV0aF91cmwsIChlcnIsIGRhdGFfdXJsKSA9PiB7CiAgICAgICAgdGhpcy5xckNvZGUgPSBkYXRhX3VybAogICAgICB9KTsKICAgIH0sCiAgICB2ZXJpZnkoKXsKICAgICAgbGV0IHJlc3VsdCA9IHNwZWFrZWFzeS50b3RwLnZlcmlmeSh7CiAgICAgICAgc2VjcmV0OiB0aGlzLnNlY3JldENvZGUub3RwYXV0aF91cmwsCiAgICAgICAgdG9rZW46IHRoaXMub3RwLAogICAgICAgIGFsZ29yaXRobTogJ3NoYTUxMicsCiAgICAgICAgZW5jb2Rpbmc6ICdiYXNlNjQnCiAgICAgIH0pCiAgICAgIGFsZXJ0KHJlc3VsdCkKICAgIH0KICB9LAp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/pages","sourcesContent":["<template>\n  <v-container>\n      <v-row class=\"text-center\">\n        <v-col cols=\"12\">\n          <v-btn block x-large color=\"primary\" @click=\"generate_2fa\">Generate 2FA</v-btn>\n          <div v-if=\"secretCode\">\n            <img v-if=\"true\" :src=\"qrCode\" class=\"img-fluid\" alt=\"\">\n            <v-card class=\"justify-center d-flex mx-auto mt-5\">\n              <v-card-text>\n                <div class=\"font-weight-bold ml-8 h3 mb-2 text-dark\">\n                  Secret Code\n                </div>\n\n                <v-timeline align-top dense>\n                  <v-timeline-item color=\"red\" small>\n                    <div class=\"text-justify text-dark\">\n                      <div class=\"font-weight-normal\">\n                        <strong>ASCII</strong>\n                      </div>\n                      <div>{{secretCode.ascii}}</div>\n                    </div>\n                  </v-timeline-item>\n                </v-timeline>\n                <v-timeline align-top dense>\n                  <v-timeline-item color=\"red\" small>\n                    <div class=\"text-justify text-dark\">\n                      <div class=\"font-weight-normal\">\n                        <strong>HEX</strong>\n                      </div>\n                      <div>{{secretCode.hex}}</div>\n                    </div>\n                  </v-timeline-item>\n                </v-timeline>\n                <v-timeline align-top dense>\n                  <v-timeline-item color=\"red\" small>\n                    <div class=\"text-justify text-dark\">\n                      <div class=\"font-weight-normal\">\n                        <strong>Base 32</strong>\n                      </div>\n                      <div>{{secretCode.base32}}</div>\n                    </div>\n                  </v-timeline-item>\n                </v-timeline>\n                <v-timeline align-top dense>\n                  <v-timeline-item color=\"red\" small>\n                    <div class=\"text-justify text-dark\">\n                      <div class=\"font-weight-normal\">\n                        <strong>OTP Auth URL</strong>\n                      </div>\n                      <div>{{secretCode.otpauth_url}}</div>\n                    </div>\n                  </v-timeline-item>\n                </v-timeline>\n\n              </v-card-text>\n            </v-card>\n            \n          </div>\n          <v-text-field label=\"Verify OTP\" :rules=\"rules\" hide-details=\"auto\" class=\"my-3\" v-model=\"otp\"></v-text-field>\n          <v-btn class=\"w-50\" x-large color=\"primary\" @click=\"verify\">Verify</v-btn>\n        </v-col>\n      </v-row>\n  </v-container>\n</template>\n\n<script>\n// @ is an alias to /src\nimport speakeasy from 'speakeasy'\nimport QRCode from 'qrcode'\nexport default {\n  name: 'home',\n  components: {\n    \n  },\n  data() {\n    return {\n      is2fa: false,\n      secretCode: '',\n      qrCode: '',\n      rules: [\n        value => !!value || 'Required.',        \n        value => {\n          const pattern = /^\\d+$/\n          return pattern.test(value) || 'Invalid OTP.'\n        },\n        value => (value || '').length === 6 || 'Must 6 digits',\n      ],\n      otp: ''\n    }\n  },\n  methods: {\n    generate_2fa() {\n      this.secretCode = speakeasy.generateSecret({\n        length: 512,\n        name: 'Test Google Authenticator (test@email.com)'\n      });\n\n      let otpauth_url = speakeasy.otpauthURL({\n        secret: this.secretCode.otpauth_url,\n        label: 'test@email.com',\n        type: 'totp',\n        issuer: 'Test Google Authenticator',\n        algorithm: 'sha512',\n        encoding: 'base64'\n      })\n\n      // Get the data URL of the authenticator URL\n      QRCode.toDataURL(otpauth_url, (err, data_url) => {\n        this.qrCode = data_url\n      });\n    },\n    verify(){\n      let result = speakeasy.totp.verify({\n        secret: this.secretCode.otpauth_url,\n        token: this.otp,\n        algorithm: 'sha512',\n        encoding: 'base64'\n      })\n      alert(result)\n    }\n  },\n}\n</script>\n<style scoped>\n\n</style>"]}]}